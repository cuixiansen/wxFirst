<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.mapper.TestMapper" >
  <resultMap id="BaseResultMap" type="com.example.demo.entity.Test" >
    <id column="test_id" property="testId" jdbcType="INTEGER" />
    <result column="test_title" property="testTitle" jdbcType="VARCHAR" />
    <result column="test_img_src" property="testImgSrc" jdbcType="VARCHAR" />
    <result column="test_price" property="testPrice" jdbcType="INTEGER" />
    <result column="test_num" property="testNum" jdbcType="INTEGER" />
    <result column="test_desc" property="testDesc" jdbcType="VARCHAR" />
    <result column="test_text" property="testText" jdbcType="VARCHAR" />
    <result column="if_three_level" property="ifThreeLevel" jdbcType="INTEGER" />
    <result column="if_advice" property="ifAdvice" jdbcType="INTEGER" />
    <result column="if_skip" property="ifSkip" jdbcType="INTEGER" />
    <result column="test_problem_num" property="testProblemNum" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    test_id, test_title, test_img_src, test_price, test_num, test_desc, test_text, if_three_level, 
    if_advice, if_skip, test_problem_num
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.example.demo.entity.TestExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from test
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from test
    where test_id = #{testId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from test
    where test_id = #{testId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.demo.entity.TestExample" >
    delete from test
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.demo.entity.Test" >
    insert into test (test_id, test_title, test_img_src, 
      test_price, test_num, test_desc, 
      test_text, if_three_level, if_advice, 
      if_skip, test_problem_num)
    values (#{testId,jdbcType=INTEGER}, #{testTitle,jdbcType=VARCHAR}, #{testImgSrc,jdbcType=VARCHAR}, 
      #{testPrice,jdbcType=INTEGER}, #{testNum,jdbcType=INTEGER}, #{testDesc,jdbcType=VARCHAR}, 
      #{testText,jdbcType=VARCHAR}, #{ifThreeLevel,jdbcType=INTEGER}, #{ifAdvice,jdbcType=INTEGER}, 
      #{ifSkip,jdbcType=INTEGER}, #{testProblemNum,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.entity.Test" >
    insert into test
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="testId != null" >
        test_id,
      </if>
      <if test="testTitle != null" >
        test_title,
      </if>
      <if test="testImgSrc != null" >
        test_img_src,
      </if>
      <if test="testPrice != null" >
        test_price,
      </if>
      <if test="testNum != null" >
        test_num,
      </if>
      <if test="testDesc != null" >
        test_desc,
      </if>
      <if test="testText != null" >
        test_text,
      </if>
      <if test="ifThreeLevel != null" >
        if_three_level,
      </if>
      <if test="ifAdvice != null" >
        if_advice,
      </if>
      <if test="ifSkip != null" >
        if_skip,
      </if>
      <if test="testProblemNum != null" >
        test_problem_num,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="testId != null" >
        #{testId,jdbcType=INTEGER},
      </if>
      <if test="testTitle != null" >
        #{testTitle,jdbcType=VARCHAR},
      </if>
      <if test="testImgSrc != null" >
        #{testImgSrc,jdbcType=VARCHAR},
      </if>
      <if test="testPrice != null" >
        #{testPrice,jdbcType=INTEGER},
      </if>
      <if test="testNum != null" >
        #{testNum,jdbcType=INTEGER},
      </if>
      <if test="testDesc != null" >
        #{testDesc,jdbcType=VARCHAR},
      </if>
      <if test="testText != null" >
        #{testText,jdbcType=VARCHAR},
      </if>
      <if test="ifThreeLevel != null" >
        #{ifThreeLevel,jdbcType=INTEGER},
      </if>
      <if test="ifAdvice != null" >
        #{ifAdvice,jdbcType=INTEGER},
      </if>
      <if test="ifSkip != null" >
        #{ifSkip,jdbcType=INTEGER},
      </if>
      <if test="testProblemNum != null" >
        #{testProblemNum,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.demo.entity.TestExample" resultType="java.lang.Integer" >
    select count(*) from test
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update test
    <set >
      <if test="record.testId != null" >
        test_id = #{record.testId,jdbcType=INTEGER},
      </if>
      <if test="record.testTitle != null" >
        test_title = #{record.testTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.testImgSrc != null" >
        test_img_src = #{record.testImgSrc,jdbcType=VARCHAR},
      </if>
      <if test="record.testPrice != null" >
        test_price = #{record.testPrice,jdbcType=INTEGER},
      </if>
      <if test="record.testNum != null" >
        test_num = #{record.testNum,jdbcType=INTEGER},
      </if>
      <if test="record.testDesc != null" >
        test_desc = #{record.testDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.testText != null" >
        test_text = #{record.testText,jdbcType=VARCHAR},
      </if>
      <if test="record.ifThreeLevel != null" >
        if_three_level = #{record.ifThreeLevel,jdbcType=INTEGER},
      </if>
      <if test="record.ifAdvice != null" >
        if_advice = #{record.ifAdvice,jdbcType=INTEGER},
      </if>
      <if test="record.ifSkip != null" >
        if_skip = #{record.ifSkip,jdbcType=INTEGER},
      </if>
      <if test="record.testProblemNum != null" >
        test_problem_num = #{record.testProblemNum,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update test
    set test_id = #{record.testId,jdbcType=INTEGER},
      test_title = #{record.testTitle,jdbcType=VARCHAR},
      test_img_src = #{record.testImgSrc,jdbcType=VARCHAR},
      test_price = #{record.testPrice,jdbcType=INTEGER},
      test_num = #{record.testNum,jdbcType=INTEGER},
      test_desc = #{record.testDesc,jdbcType=VARCHAR},
      test_text = #{record.testText,jdbcType=VARCHAR},
      if_three_level = #{record.ifThreeLevel,jdbcType=INTEGER},
      if_advice = #{record.ifAdvice,jdbcType=INTEGER},
      if_skip = #{record.ifSkip,jdbcType=INTEGER},
      test_problem_num = #{record.testProblemNum,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.entity.Test" >
    update test
    <set >
      <if test="testTitle != null" >
        test_title = #{testTitle,jdbcType=VARCHAR},
      </if>
      <if test="testImgSrc != null" >
        test_img_src = #{testImgSrc,jdbcType=VARCHAR},
      </if>
      <if test="testPrice != null" >
        test_price = #{testPrice,jdbcType=INTEGER},
      </if>
      <if test="testNum != null" >
        test_num = #{testNum,jdbcType=INTEGER},
      </if>
      <if test="testDesc != null" >
        test_desc = #{testDesc,jdbcType=VARCHAR},
      </if>
      <if test="testText != null" >
        test_text = #{testText,jdbcType=VARCHAR},
      </if>
      <if test="ifThreeLevel != null" >
        if_three_level = #{ifThreeLevel,jdbcType=INTEGER},
      </if>
      <if test="ifAdvice != null" >
        if_advice = #{ifAdvice,jdbcType=INTEGER},
      </if>
      <if test="ifSkip != null" >
        if_skip = #{ifSkip,jdbcType=INTEGER},
      </if>
      <if test="testProblemNum != null" >
        test_problem_num = #{testProblemNum,jdbcType=INTEGER},
      </if>
    </set>
    where test_id = #{testId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.entity.Test" >
    update test
    set test_title = #{testTitle,jdbcType=VARCHAR},
      test_img_src = #{testImgSrc,jdbcType=VARCHAR},
      test_price = #{testPrice,jdbcType=INTEGER},
      test_num = #{testNum,jdbcType=INTEGER},
      test_desc = #{testDesc,jdbcType=VARCHAR},
      test_text = #{testText,jdbcType=VARCHAR},
      if_three_level = #{ifThreeLevel,jdbcType=INTEGER},
      if_advice = #{ifAdvice,jdbcType=INTEGER},
      if_skip = #{ifSkip,jdbcType=INTEGER},
      test_problem_num = #{testProblemNum,jdbcType=INTEGER}
    where test_id = #{testId,jdbcType=INTEGER}
  </update>
</mapper>