<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.mapper.AudioMapper" >
  <resultMap id="BaseResultMap" type="com.example.demo.entity.Audio" >
    <id column="audio_id" property="audioId" jdbcType="INTEGER" />
    <result column="audio_title" property="audioTitle" jdbcType="VARCHAR" />
    <result column="audio_price" property="audioPrice" jdbcType="DOUBLE" />
    <result column="audio_img_src" property="audioImgSrc" jdbcType="VARCHAR" />
    <result column="audio_author" property="audioAuthor" jdbcType="VARCHAR" />
    <result column="audio_src" property="audioSrc" jdbcType="VARCHAR" />
    <result column="audio_nominate" property="audioNominate" jdbcType="INTEGER" />
    <result column="audio_date" property="audioDate" jdbcType="TIMESTAMP" />
    <result column="audio_text" property="audioText" jdbcType="VARCHAR" />
    <result column="audio_desc" property="audioDesc" jdbcType="VARCHAR" />
    <result column="audio_num" property="audioNum" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    audio_id, audio_title, audio_price, audio_img_src, audio_author, audio_src, audio_nominate, 
    audio_date, audio_text, audio_desc, audio_num
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.example.demo.entity.AudioExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from audio
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from audio
    where audio_id = #{audioId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from audio
    where audio_id = #{audioId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.demo.entity.AudioExample" >
    delete from audio
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.demo.entity.Audio" >
    insert into audio (audio_id, audio_title, audio_price, 
      audio_img_src, audio_author, audio_src, 
      audio_nominate, audio_date, audio_text, 
      audio_desc, audio_num)
    values (#{audioId,jdbcType=INTEGER}, #{audioTitle,jdbcType=VARCHAR}, #{audioPrice,jdbcType=DOUBLE}, 
      #{audioImgSrc,jdbcType=VARCHAR}, #{audioAuthor,jdbcType=VARCHAR}, #{audioSrc,jdbcType=VARCHAR}, 
      #{audioNominate,jdbcType=INTEGER}, #{audioDate,jdbcType=TIMESTAMP}, #{audioText,jdbcType=VARCHAR}, 
      #{audioDesc,jdbcType=VARCHAR}, #{audioNum,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.entity.Audio" >
    insert into audio
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="audioId != null" >
        audio_id,
      </if>
      <if test="audioTitle != null" >
        audio_title,
      </if>
      <if test="audioPrice != null" >
        audio_price,
      </if>
      <if test="audioImgSrc != null" >
        audio_img_src,
      </if>
      <if test="audioAuthor != null" >
        audio_author,
      </if>
      <if test="audioSrc != null" >
        audio_src,
      </if>
      <if test="audioNominate != null" >
        audio_nominate,
      </if>
      <if test="audioDate != null" >
        audio_date,
      </if>
      <if test="audioText != null" >
        audio_text,
      </if>
      <if test="audioDesc != null" >
        audio_desc,
      </if>
      <if test="audioNum != null" >
        audio_num,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="audioId != null" >
        #{audioId,jdbcType=INTEGER},
      </if>
      <if test="audioTitle != null" >
        #{audioTitle,jdbcType=VARCHAR},
      </if>
      <if test="audioPrice != null" >
        #{audioPrice,jdbcType=DOUBLE},
      </if>
      <if test="audioImgSrc != null" >
        #{audioImgSrc,jdbcType=VARCHAR},
      </if>
      <if test="audioAuthor != null" >
        #{audioAuthor,jdbcType=VARCHAR},
      </if>
      <if test="audioSrc != null" >
        #{audioSrc,jdbcType=VARCHAR},
      </if>
      <if test="audioNominate != null" >
        #{audioNominate,jdbcType=INTEGER},
      </if>
      <if test="audioDate != null" >
        #{audioDate,jdbcType=TIMESTAMP},
      </if>
      <if test="audioText != null" >
        #{audioText,jdbcType=VARCHAR},
      </if>
      <if test="audioDesc != null" >
        #{audioDesc,jdbcType=VARCHAR},
      </if>
      <if test="audioNum != null" >
        #{audioNum,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.demo.entity.AudioExample" resultType="java.lang.Integer" >
    select count(*) from audio
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update audio
    <set >
      <if test="record.audioId != null" >
        audio_id = #{record.audioId,jdbcType=INTEGER},
      </if>
      <if test="record.audioTitle != null" >
        audio_title = #{record.audioTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.audioPrice != null" >
        audio_price = #{record.audioPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.audioImgSrc != null" >
        audio_img_src = #{record.audioImgSrc,jdbcType=VARCHAR},
      </if>
      <if test="record.audioAuthor != null" >
        audio_author = #{record.audioAuthor,jdbcType=VARCHAR},
      </if>
      <if test="record.audioSrc != null" >
        audio_src = #{record.audioSrc,jdbcType=VARCHAR},
      </if>
      <if test="record.audioNominate != null" >
        audio_nominate = #{record.audioNominate,jdbcType=INTEGER},
      </if>
      <if test="record.audioDate != null" >
        audio_date = #{record.audioDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.audioText != null" >
        audio_text = #{record.audioText,jdbcType=VARCHAR},
      </if>
      <if test="record.audioDesc != null" >
        audio_desc = #{record.audioDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.audioNum != null" >
        audio_num = #{record.audioNum,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update audio
    set audio_id = #{record.audioId,jdbcType=INTEGER},
      audio_title = #{record.audioTitle,jdbcType=VARCHAR},
      audio_price = #{record.audioPrice,jdbcType=DOUBLE},
      audio_img_src = #{record.audioImgSrc,jdbcType=VARCHAR},
      audio_author = #{record.audioAuthor,jdbcType=VARCHAR},
      audio_src = #{record.audioSrc,jdbcType=VARCHAR},
      audio_nominate = #{record.audioNominate,jdbcType=INTEGER},
      audio_date = #{record.audioDate,jdbcType=TIMESTAMP},
      audio_text = #{record.audioText,jdbcType=VARCHAR},
      audio_desc = #{record.audioDesc,jdbcType=VARCHAR},
      audio_num = #{record.audioNum,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.entity.Audio" >
    update audio
    <set >
      <if test="audioTitle != null" >
        audio_title = #{audioTitle,jdbcType=VARCHAR},
      </if>
      <if test="audioPrice != null" >
        audio_price = #{audioPrice,jdbcType=DOUBLE},
      </if>
      <if test="audioImgSrc != null" >
        audio_img_src = #{audioImgSrc,jdbcType=VARCHAR},
      </if>
      <if test="audioAuthor != null" >
        audio_author = #{audioAuthor,jdbcType=VARCHAR},
      </if>
      <if test="audioSrc != null" >
        audio_src = #{audioSrc,jdbcType=VARCHAR},
      </if>
      <if test="audioNominate != null" >
        audio_nominate = #{audioNominate,jdbcType=INTEGER},
      </if>
      <if test="audioDate != null" >
        audio_date = #{audioDate,jdbcType=TIMESTAMP},
      </if>
      <if test="audioText != null" >
        audio_text = #{audioText,jdbcType=VARCHAR},
      </if>
      <if test="audioDesc != null" >
        audio_desc = #{audioDesc,jdbcType=VARCHAR},
      </if>
      <if test="audioNum != null" >
        audio_num = #{audioNum,jdbcType=INTEGER},
      </if>
    </set>
    where audio_id = #{audioId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.entity.Audio" >
    update audio
    set audio_title = #{audioTitle,jdbcType=VARCHAR},
      audio_price = #{audioPrice,jdbcType=DOUBLE},
      audio_img_src = #{audioImgSrc,jdbcType=VARCHAR},
      audio_author = #{audioAuthor,jdbcType=VARCHAR},
      audio_src = #{audioSrc,jdbcType=VARCHAR},
      audio_nominate = #{audioNominate,jdbcType=INTEGER},
      audio_date = #{audioDate,jdbcType=TIMESTAMP},
      audio_text = #{audioText,jdbcType=VARCHAR},
      audio_desc = #{audioDesc,jdbcType=VARCHAR},
      audio_num = #{audioNum,jdbcType=INTEGER}
    where audio_id = #{audioId,jdbcType=INTEGER}
  </update>
   <!-- 自己写的 -->
   <select id="selectAudioByPage" parameterType="map"  resultMap="BaseResultMap" >
 SELECT *  from audio  limit #{startindex},#{pagesize}
 </select>
 
 <select id="selectAudioByConditionByPage" parameterType="map"  resultMap="BaseResultMap" >
 SELECT *  FROM audio 
 <where>
 
 <if test="audio.audioTitle !=null and audio.audioTitle !=''">
 and  audio_title  like "%"#{audio.audioTitle}"%"
 </if>
 <if test="audio.audioAuthor !=null and audio.audioAuthor !=''">
 and audio_author like "%"#{audio.audioAuthor}"%"
 </if>
 <if test="date !=null and date !=''">
 and audio_date like "%"#{date}"%"
 </if>
 
 </where>
 limit #{startindex},#{pagesize}
 </select>
 
 <select id="selectAudioByNominateByDesc" parameterType="int"  resultMap="BaseResultMap"  >
 select * from audio where audio_nominate=#{nominate} order by audio_id desc limit 3
 </select>
</mapper>