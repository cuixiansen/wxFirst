<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.mapper.UserandtestdetailMapper" >
  <resultMap id="BaseResultMap" type="com.example.demo.entity.Userandtestdetail" >
    <id column="user_detail_id" property="userDetailId" jdbcType="INTEGER" />
    <result column="test_id" property="testId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="test_problem_id" property="testProblemId" jdbcType="INTEGER" />
    <result column="user_answer" property="userAnswer" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    user_detail_id, test_id, user_id, test_problem_id, user_answer
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.example.demo.entity.UserandtestdetailExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from userandtestdetail
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from userandtestdetail
    where user_detail_id = #{userDetailId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from userandtestdetail
    where user_detail_id = #{userDetailId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.demo.entity.UserandtestdetailExample" >
    delete from userandtestdetail
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.demo.entity.Userandtestdetail" >
    insert into userandtestdetail (user_detail_id, test_id, user_id, 
      test_problem_id, user_answer)
    values (#{userDetailId,jdbcType=INTEGER}, #{testId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{testProblemId,jdbcType=INTEGER}, #{userAnswer,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.entity.Userandtestdetail" >
    insert into userandtestdetail
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userDetailId != null" >
        user_detail_id,
      </if>
      <if test="testId != null" >
        test_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="testProblemId != null" >
        test_problem_id,
      </if>
      <if test="userAnswer != null" >
        user_answer,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userDetailId != null" >
        #{userDetailId,jdbcType=INTEGER},
      </if>
      <if test="testId != null" >
        #{testId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="testProblemId != null" >
        #{testProblemId,jdbcType=INTEGER},
      </if>
      <if test="userAnswer != null" >
        #{userAnswer,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.demo.entity.UserandtestdetailExample" resultType="java.lang.Integer" >
    select count(*) from userandtestdetail
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update userandtestdetail
    <set >
      <if test="record.userDetailId != null" >
        user_detail_id = #{record.userDetailId,jdbcType=INTEGER},
      </if>
      <if test="record.testId != null" >
        test_id = #{record.testId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.testProblemId != null" >
        test_problem_id = #{record.testProblemId,jdbcType=INTEGER},
      </if>
      <if test="record.userAnswer != null" >
        user_answer = #{record.userAnswer,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update userandtestdetail
    set user_detail_id = #{record.userDetailId,jdbcType=INTEGER},
      test_id = #{record.testId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      test_problem_id = #{record.testProblemId,jdbcType=INTEGER},
      user_answer = #{record.userAnswer,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.entity.Userandtestdetail" >
    update userandtestdetail
    <set >
      <if test="testId != null" >
        test_id = #{testId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="testProblemId != null" >
        test_problem_id = #{testProblemId,jdbcType=INTEGER},
      </if>
      <if test="userAnswer != null" >
        user_answer = #{userAnswer,jdbcType=VARCHAR},
      </if>
    </set>
    where user_detail_id = #{userDetailId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.entity.Userandtestdetail" >
    update userandtestdetail
    set test_id = #{testId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      test_problem_id = #{testProblemId,jdbcType=INTEGER},
      user_answer = #{userAnswer,jdbcType=VARCHAR}
    where user_detail_id = #{userDetailId,jdbcType=INTEGER}
  </update>
</mapper>